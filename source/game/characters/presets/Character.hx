package game.characters.presets;

interface Character {
	public var _(get, null):FlxSprite;

	public var parent:StrumLine;

	public var flipped:Bool;

	public var gameOverChar:Class<Character>;

	public function playMissAnim(strumID:Int, ?note:Note):Void;

	public function playSingAnim(strumID:Int, ?note:Note):Void;

	public function playDeathAnim(callback:Void->Void):Void;

	public function playDeathConfirmAnim():Void;

	public function dance(beat:Int, force:Bool):Void;

	public function getCameraPosition():FlxPoint;

}

@:build(backend.macros.CharacterUtilMacro.build())
class CharacterUtil {
	/**
	 * Returns a class from the character name. (This function is auto-generated by the macro)
	 * @param charName Character name
	 * @return Class<Character> class, or SpriteCharacter as a fallback if none.
	 */
	public static function getClassFromChar(charName:String):Class<Character> {
		return null;
	}
	
	public static function getClassNameForChar(charName:String) {
		var potentialName = [for(e in charName.split("_")) for(e2 in e.split("-")) e2];
		for(k=>n in potentialName) {
			potentialName[k] = n.charAt(0).toUpperCase() + n.substr(1);
		}
		return potentialName.join("");
	}
}